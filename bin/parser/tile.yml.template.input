---
# The high-level description of your tile.
# Replace these properties with real values.
#
name: solace-messaging # By convention lowercase with dashes
icon_file: resources/solace-logo-200x200.png
label: Solace Messaging
description: Solace Messaging for Pivotal Cloud Foundry
metadata_version: 1.8 

# Global defaults (all optional)
#
org: solace                      # Name of org to create for your apps
org_quota: 4096                  # Memory quota for that org in MB
space: solace-messaging          # Name of space to create for your apps
apply_open_security_group: true  # Apply open security group, default: false

packages:
  - name: solace-messaging
    type: app-broker
    manifest:
      env:
        JBP_CONFIG_CONTAINER_CERTIFICATE_TRUST_STORE: '{enabled: true}'
      path: resources/__SOLACE_SERVICE_BROKER_JAR__
      buildpack: java_buildpack_offline
    auto_services:
      - name: p-mysql
  - name: docker
    type: bosh-release
    path: resources/docker-29-solace-2.tgz
  - name: solace-vmr
    type: bosh-release
    path: resources/__SOLACE_VMR_BOSH_RELEASE__
    jobs:
    - name: Large-VMR
      resource_label: Large VMR Pool
      memory: 12288
      ephemeral_disk: 10240
      persistent_disk: 40960
      cpu: 4
      static_ip: 1
      dynamic_ip: 0
      max_in_flight: 1
      templates:
        - name: docker
          release: docker
        - name: prepare_vmr
          release: solace-vmr
        - name: containers
          release: solace-vmr
        - name: vmr_agent
          release: solace-vmr
        - name: route_registrar
          release: solace-vmr
      properties:
        pool_name: 'Large-VMR'
        starting_port: (( .properties.starting_port.value ))
        vmr_agent_port: 18080
        broker_user: (( ..solace-messaging.deploy-all.app_credentials.identity ))
        broker_password: (( ..solace-messaging.deploy-all.app_credentials.password ))
        broker_hostname: solace-messaging.(( ..cf.cloud_controller.apps_domain.value ))
        heartbeat_rate: 15000
        admin_user: 'admin'
        admin_password: (( .properties.vmr_admin_password.value ))
        ssh_port: 2222
        semp_port: 8080
        semp_ssl_port: 943
        tls_config: (( .properties.tls_config.value ))
        private_key_pem: (( .properties.tls_config.enabled.rsa_server_cert.private_key_pem ))
        cert_pem: (( .properties.tls_config.enabled.rsa_server_cert.cert_pem ))
        trusted_root_certificates: (( .properties.tls_config.enabled.trusted_root_certificates.value ))
        system_domain: (( ..cf.cloud_controller.system_domain.value ))
        management_access_auth_scheme: (( .properties.management_access_auth_scheme.value ))
        application_access_auth_scheme: (( .properties.application_access_auth_scheme.value ))
        cf_api_host: api.(( ..cf.cloud_controller.system_domain.value ))
        cf_client_id: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.identity ||  ..cf.uaa.solace_router.identity ))
        cf_client_secret: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.password ||  ..cf.uaa.solace_router.password ))
        cf_organization: 'solace'
        cf_space: 'solace-messaging'
        tcp_routes_enabled: (( .properties.tcp_routes_config.value ))
        nats:
          user: (( ..cf.nats.credentials.identity ))
          password: (( ..cf.nats.credentials.password ))
          port: 4222
          machines: (( ..cf.nats.ips ))
        containers:
          - name: solace
            image: solace-bosh
            dockerfile: |
              FROM solace-app:latest-evaluation

              RUN \
                echo `date` 'Changing admin password to (( .properties.vmr_admin_password.value ))' >> /usr/tile-debug.txt && \
                chmod 777 /usr/tile-debug.txt && \
                echo '#!/bin/bash' > /sbin/dhclient && \
                echo 'exit 0' >> /sbin/dhclient && \
                echo '3a:40:d5:42:f4:86' > /usr/sw/.nodeIdentifyingMacAddr && \
                chmod +x /sbin/dhclient
            env_vars:
             - "NODE_TYPE=MESSAGE_ROUTING_NODE"
             - "SERVICE_SSH_PORT=2222"
             - "ALWAYS_DIE_ON_FAILURE=1"
             - "USERNAME_ADMIN_PASSWORD=(( .properties.vmr_admin_password.value ))"
             - "USERNAME_ADMIN_GLOBALACCESSLEVEL=admin"
            net: host
            shm_size: 2G
            privileged: true
            uts: host
            volumes:
            - /var/vcap/store/prepare_vmr/volumes/jail:/usr/sw/jail
            - /var/vcap/store/prepare_vmr/volumes/var:/usr/sw/var
            - /var/vcap/store/prepare_vmr/volumes/internalSpool:/usr/sw/internalSpool
            - /var/vcap/store/prepare_vmr/volumes/adbBackup:/usr/sw/adb
            - /var/vcap/store/prepare_vmr/volumes/adb:/usr/sw/internalSpool/softAdb
    - name: Shared-VMR
      resource_label: Shared VMR Pool
      memory: 4096
      ephemeral_disk: 10240
      persistent_disk: 20480
      cpu: 2
      static_ip: 1
      dynamic_ip: 0
      max_in_flight: 1
      templates:
        - name: docker
          release: docker
        - name: prepare_vmr
          release: solace-vmr
        - name: containers
          release: solace-vmr
        - name: vmr_agent
          release: solace-vmr
        - name: route_registrar
          release: solace-vmr
      properties:
        pool_name: 'Shared-VMR'
        starting_port: (( .properties.starting_port.value ))
        vmr_agent_port: 18080
        broker_user: (( ..solace-messaging.deploy-all.app_credentials.identity ))
        broker_password: (( ..solace-messaging.deploy-all.app_credentials.password ))
        broker_hostname: solace-messaging.(( ..cf.cloud_controller.apps_domain.value ))
        heartbeat_rate: 15000
        admin_user: 'admin'
        admin_password: (( .properties.vmr_admin_password.value ))
        ssh_port: 2222
        semp_port: 8080
        semp_ssl_port: 943
        tls_config: (( .properties.tls_config.value ))
        private_key_pem: (( .properties.tls_config.enabled.rsa_server_cert.private_key_pem ))
        cert_pem: (( .properties.tls_config.enabled.rsa_server_cert.cert_pem ))
        trusted_root_certificates: (( .properties.tls_config.enabled.trusted_root_certificates.value ))
        system_domain: (( ..cf.cloud_controller.system_domain.value ))
        management_access_auth_scheme: (( .properties.management_access_auth_scheme.value ))
        application_access_auth_scheme: (( .properties.application_access_auth_scheme.value ))
        cf_api_host: api.(( ..cf.cloud_controller.system_domain.value ))
        cf_client_id: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.identity ||  ..cf.uaa.solace_router.identity ))
        cf_client_secret: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.password ||  ..cf.uaa.solace_router.password ))
        cf_organization: 'solace'
        cf_space: 'solace-messaging'
        tcp_routes_enabled: (( .properties.tcp_routes_config.value ))
        nats:
          user: (( ..cf.nats.credentials.identity ))
          password: (( ..cf.nats.credentials.password ))
          port: 4222
          machines: (( ..cf.nats.ips ))
        containers:
          - name: solace
            image: solace-bosh
            dockerfile: |
              FROM solace-app:latest-evaluation

              RUN \
                echo `date` 'Changing admin password to (( .properties.vmr_admin_password.value ))' >> /usr/tile-debug.txt && \
                chmod 777 /usr/tile-debug.txt && \
                echo '#!/bin/bash' > /sbin/dhclient && \
                echo 'exit 0' >> /sbin/dhclient && \
                echo '3a:40:d5:42:f4:86' > /usr/sw/.nodeIdentifyingMacAddr && \
                chmod +x /sbin/dhclient
            env_vars:
             - "NODE_TYPE=MESSAGE_ROUTING_NODE"
             - "SERVICE_SSH_PORT=2222"
             - "ALWAYS_DIE_ON_FAILURE=1"
             - "USERNAME_ADMIN_PASSWORD=(( .properties.vmr_admin_password.value ))"
             - "USERNAME_ADMIN_GLOBALACCESSLEVEL=admin"
            net: host
            shm_size: 2G
            privileged: true
            uts: host
            volumes:
            - /var/vcap/store/prepare_vmr/volumes/jail:/usr/sw/jail
            - /var/vcap/store/prepare_vmr/volumes/var:/usr/sw/var
            - /var/vcap/store/prepare_vmr/volumes/internalSpool:/usr/sw/internalSpool
            - /var/vcap/store/prepare_vmr/volumes/adbBackup:/usr/sw/adb
            - /var/vcap/store/prepare_vmr/volumes/adb:/usr/sw/internalSpool/softAdb
    - name: Community-VMR
      resource_label: Community VMR Pool
      memory: 4096
      ephemeral_disk: 10240
      persistent_disk: 20480
      cpu: 2
      static_ip: 1
      dynamic_ip: 0
      max_in_flight: 1
      templates:
        - name: docker
          release: docker
        - name: prepare_vmr
          release: solace-vmr
        - name: containers
          release: solace-vmr
        - name: vmr_agent
          release: solace-vmr
        - name: route_registrar
          release: solace-vmr
      properties:
        pool_name: 'Community-VMR'
        starting_port: (( .properties.starting_port.value ))
        vmr_agent_port: 18080
        broker_user: (( ..solace-messaging.deploy-all.app_credentials.identity ))
        broker_password: (( ..solace-messaging.deploy-all.app_credentials.password ))
        broker_hostname: solace-messaging.(( ..cf.cloud_controller.apps_domain.value ))
        heartbeat_rate: 15000
        admin_user: 'admin'
        admin_password: (( .properties.vmr_admin_password.value ))
        ssh_port: 2222
        semp_port: 8080
        semp_ssl_port: 943
        tls_config: (( .properties.tls_config.value ))
        private_key_pem: (( .properties.tls_config.enabled.rsa_server_cert.private_key_pem ))
        cert_pem: (( .properties.tls_config.enabled.rsa_server_cert.cert_pem ))
        trusted_root_certificates: (( .properties.tls_config.enabled.trusted_root_certificates.value ))
        system_domain: (( ..cf.cloud_controller.system_domain.value ))
        management_access_auth_scheme: (( .properties.management_access_auth_scheme.value ))
        application_access_auth_scheme: (( .properties.application_access_auth_scheme.value ))
        cf_api_host: api.(( ..cf.cloud_controller.system_domain.value ))
        cf_client_id: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.identity ||  ..cf.uaa.solace_router.identity ))
        cf_client_secret: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.password ||  ..cf.uaa.solace_router.password ))
        cf_organization: 'solace'
        cf_space: 'solace-messaging'
        tcp_routes_enabled: (( .properties.tcp_routes_config.value ))
        nats:
          user: (( ..cf.nats.credentials.identity ))
          password: (( ..cf.nats.credentials.password ))
          port: 4222
          machines: (( ..cf.nats.ips ))
        containers:
          - name: solace
            image: solace-bosh
            dockerfile: |
              FROM solace-app:latest-community

              RUN \
                echo `date` 'Changing admin password to (( .properties.vmr_admin_password.value ))' >> /usr/tile-debug.txt && \
                chmod 777 /usr/tile-debug.txt && \
                echo '#!/bin/bash' > /sbin/dhclient && \
                echo 'exit 0' >> /sbin/dhclient && \
                echo '3a:40:d5:42:f4:86' > /usr/sw/.nodeIdentifyingMacAddr && \
                chmod +x /sbin/dhclient
            env_vars:
             - "NODE_TYPE=MESSAGE_ROUTING_NODE"
             - "SERVICE_SSH_PORT=2222"
             - "ALWAYS_DIE_ON_FAILURE=1"
             - "USERNAME_ADMIN_PASSWORD=(( .properties.vmr_admin_password.value ))"
             - "USERNAME_ADMIN_GLOBALACCESSLEVEL=admin"
            net: host
            shm_size: 2G
            privileged: true
            uts: host
            volumes:
            - /var/vcap/store/prepare_vmr/volumes/jail:/usr/sw/jail
            - /var/vcap/store/prepare_vmr/volumes/var:/usr/sw/var
            - /var/vcap/store/prepare_vmr/volumes/internalSpool:/usr/sw/internalSpool
            - /var/vcap/store/prepare_vmr/volumes/adbBackup:/usr/sw/adb
            - /var/vcap/store/prepare_vmr/volumes/adb:/usr/sw/internalSpool/softAdb
    - name: Medium-HA-VMR
      resource_label: Medium HA VMR Pool
      instances: 3
      memory: 4096
      ephemeral_disk: 10240
      persistent_disk: 20480
      cpu: 2
      static_ip: 1
      dynamic_ip: 0
      max_in_flight: 1
      templates:
        - name: docker
          release: docker
        - name: prepare_vmr
          release: solace-vmr
        - name: containers
          release: solace-vmr
        - name: vmr_agent
          release: solace-vmr
        - name: route_registrar
          release: solace-vmr
      properties:
        pool_name: 'Medium-HA-VMR'
        starting_port: (( .properties.starting_port.value ))
        vmr_agent_port: 18080
        broker_user: (( ..solace-messaging.deploy-all.app_credentials.identity ))
        broker_password: (( ..solace-messaging.deploy-all.app_credentials.password ))
        broker_hostname: solace-messaging.(( ..cf.cloud_controller.apps_domain.value ))
        heartbeat_rate: 15000
        admin_user: 'admin'
        admin_password: (( .properties.vmr_admin_password.value ))
        ssh_port: 2222
        semp_port: 8080
        semp_ssl_port: 943
        tls_config: (( .properties.tls_config.value ))
        private_key_pem: (( .properties.tls_config.enabled.rsa_server_cert.private_key_pem ))
        cert_pem: (( .properties.tls_config.enabled.rsa_server_cert.cert_pem ))
        trusted_root_certificates: (( .properties.tls_config.enabled.trusted_root_certificates.value ))
        system_domain: (( ..cf.cloud_controller.system_domain.value ))
        management_access_auth_scheme: (( .properties.management_access_auth_scheme.value ))
        application_access_auth_scheme: (( .properties.application_access_auth_scheme.value ))
        cf_api_host: api.(( ..cf.cloud_controller.system_domain.value ))
        cf_client_id: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.identity ||  ..cf.uaa.solace_router.identity ))
        cf_client_secret: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.password ||  ..cf.uaa.solace_router.password ))
        cf_organization: 'solace'
        cf_space: 'solace-messaging'
        tcp_routes_enabled: (( .properties.tcp_routes_config.value ))
        nats:
          user: (( ..cf.nats.credentials.identity ))
          password: (( ..cf.nats.credentials.password ))
          port: 4222
          machines: (( ..cf.nats.ips ))
        containers:
          - name: solace
            image: solace-bosh
            dockerfile: |
              FROM solace-app:latest-evaluation

              RUN \
                echo `date` 'Changing admin password to (( .properties.vmr_admin_password.value ))' >> /usr/tile-debug.txt && \
                chmod 777 /usr/tile-debug.txt && \
                echo '#!/bin/bash' > /sbin/dhclient && \
                echo 'exit 0' >> /sbin/dhclient && \
                echo '3a:40:d5:42:f4:86' > /usr/sw/.nodeIdentifyingMacAddr && \
                chmod +x /sbin/dhclient
            env_vars:
             - "NODE_TYPE=MESSAGE_ROUTING_NODE"
             - "SERVICE_SSH_PORT=2222"
             - "ALWAYS_DIE_ON_FAILURE=1"
             - "USERNAME_ADMIN_PASSWORD=(( .properties.vmr_admin_password.value ))"
             - "USERNAME_ADMIN_GLOBALACCESSLEVEL=admin"
            net: host
            shm_size: 2G
            privileged: true
            uts: host
            volumes:
            - /var/vcap/store/prepare_vmr/volumes/jail:/usr/sw/jail
            - /var/vcap/store/prepare_vmr/volumes/var:/usr/sw/var
            - /var/vcap/store/prepare_vmr/volumes/internalSpool:/usr/sw/internalSpool
            - /var/vcap/store/prepare_vmr/volumes/adbBackup:/usr/sw/adb
            - /var/vcap/store/prepare_vmr/volumes/adb:/usr/sw/internalSpool/softAdb
    - name: Large-HA-VMR
      resource_label: Large HA VMR Pool
      instances: 3
      memory: 12288
      ephemeral_disk: 10240
      persistent_disk: 40960
      cpu: 4
      static_ip: 1
      dynamic_ip: 0
      max_in_flight: 1
      templates:
        - name: docker
          release: docker
        - name: prepare_vmr
          release: solace-vmr
        - name: containers
          release: solace-vmr
        - name: vmr_agent
          release: solace-vmr
        - name: route_registrar
          release: solace-vmr
      properties:
        pool_name: 'Large-HA-VMR'
        starting_port: (( .properties.starting_port.value ))
        vmr_agent_port: 18080
        broker_user: (( ..solace-messaging.deploy-all.app_credentials.identity ))
        broker_password: (( ..solace-messaging.deploy-all.app_credentials.password ))
        broker_hostname: solace-messaging.(( ..cf.cloud_controller.apps_domain.value ))
        heartbeat_rate: 15000
        admin_user: 'admin'
        admin_password: (( .properties.vmr_admin_password.value ))
        ssh_port: 2222
        semp_port: 8080
        semp_ssl_port: 943
        tls_config: (( .properties.tls_config.value ))
        private_key_pem: (( .properties.tls_config.enabled.rsa_server_cert.private_key_pem ))
        cert_pem: (( .properties.tls_config.enabled.rsa_server_cert.cert_pem ))
        trusted_root_certificates: (( .properties.tls_config.enabled.trusted_root_certificates.value ))
        system_domain: (( ..cf.cloud_controller.system_domain.value ))
        management_access_auth_scheme: (( .properties.management_access_auth_scheme.value ))
        application_access_auth_scheme: (( .properties.application_access_auth_scheme.value ))
        cf_api_host: api.(( ..cf.cloud_controller.system_domain.value ))
        cf_client_id: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.identity ||  ..cf.uaa.solace_router.identity ))
        cf_client_secret: (( .properties.tcp_routes_config.disabled.tcp_route_enabled.value || .properties.tcp_routes_config.enabled.cf_credentials.password ||  ..cf.uaa.solace_router.password ))
        cf_organization: 'solace'
        cf_space: 'solace-messaging'
        tcp_routes_enabled: (( .properties.tcp_routes_config.value ))
        nats:
          user: (( ..cf.nats.credentials.identity ))
          password: (( ..cf.nats.credentials.password ))
          port: 4222
          machines: (( ..cf.nats.ips ))
        containers:
          - name: solace
            image: solace-bosh
            dockerfile: |
              FROM solace-app:latest-evaluation

              RUN \
                echo `date` 'Changing admin password to (( .properties.vmr_admin_password.value ))' >> /usr/tile-debug.txt && \
                chmod 777 /usr/tile-debug.txt && \
                echo '#!/bin/bash' > /sbin/dhclient && \
                echo 'exit 0' >> /sbin/dhclient && \
                echo '3a:40:d5:42:f4:86' > /usr/sw/.nodeIdentifyingMacAddr && \
                chmod +x /sbin/dhclient
            env_vars:
             - "NODE_TYPE=MESSAGE_ROUTING_NODE"
             - "SERVICE_SSH_PORT=2222"
             - "ALWAYS_DIE_ON_FAILURE=1"
             - "USERNAME_ADMIN_PASSWORD=(( .properties.vmr_admin_password.value ))"
             - "USERNAME_ADMIN_GLOBALACCESSLEVEL=admin"
            net: host
            shm_size: 2G
            privileged: true
            uts: host
            volumes:
            - /var/vcap/store/prepare_vmr/volumes/jail:/usr/sw/jail
            - /var/vcap/store/prepare_vmr/volumes/var:/usr/sw/var
            - /var/vcap/store/prepare_vmr/volumes/internalSpool:/usr/sw/internalSpool
            - /var/vcap/store/prepare_vmr/volumes/adbBackup:/usr/sw/adb
            - /var/vcap/store/prepare_vmr/volumes/adb:/usr/sw/internalSpool/softAdb

# Include stemcell criteria if you don't want to accept the default.
# Since this stemcell is only used to run pre and post errands, we
# strongly recommend you leave this alone so that your tile always
# runs with the latest stemcell.
#
stemcell_criteria:
  os: ubuntu-trusty
  requires_cpi: false

#bosh-stemcell-3232.4-vsphere-esxi-ubuntu-trusty-go_agent.tgz

# Add properties you want to pass to your applications.
# Properties specified here will not be configurable by the user.
#
# properties:
# - name: example_property
#   type: string
#   default: specify a value
#   label: Label for the field on the GUI
#   description: Longer description of the field's purpose

# Uncomment this section if you want to display forms with configurable
# properties in Ops Manager. These properties will be passed to your
# applications as environment variables. You can also refer to them
# elsewhere in this template by using:
#     (( .properties.<property-name> ))
#
forms:
 - name: message_router_config
   label: Message Router Config
   description: Message Router Config
   properties:
   - name: starting_port
     type: port
     placeholder: 7000
     default: 7000
     label: Starting Port
     description: Services on the Message Routers will be assigned ports starting from the port specified here
 - name: tls_settings
   label: TLS Config
   description: TLS Config
   properties:
   - name: tls_config
     type: selector
     label: Choose whether TLS is enabled or not
     configurable: true
     default: disabled
     option_templates:
     - name: disabled
       select_value: disabled
       label: TLS Disabled
     - name: enabled
       select_value: enabled
       label: TLS Enabled
       property_blueprints:
       - name: rsa_server_cert
         type: rsa_cert_credentials
         placeholder: Message Router's Server Certificate
         label: Message Router's RSA certificate (Server Certificate)
         description: The RSA server certificate and private key to install on Message Routers
         configurable: true
         optional: false
       - name: broker_validate_cert_disabled
         type: boolean
         label: Disable RSA Server Certificate validation on the Service Broker (For development only)
         configurable: true
       - name: trusted_root_certificates
         type: text
         placeholder: Trusted Root Certificates PEM
         label: Message Router's Trusted Root Certificates
         description: These certificates will be stored in the trust store on the VMRs. Place all self signed certificates, and root CA certificates that need to be trusted in this form.
         configurable: true
         optional: true
 - name: application_access_config
   label: Application Access
   description: "Configure how applications will be authenticated to their bound service instances."
   properties:
   - name: application_access_auth_scheme
     type: selector
     label: "Choose the Authentication/Authorization mechanism for VMR Messaging applications."
     description: "When 'LDAP Server' is selected, you must enable LDAP and enter valid settings under 'LDAP Settings'. A Deployment will fail if LDAP is not enabled or its settings are not valid."
     configurable: true
     default: vmr_internal
     optional: false
     option_templates:
     - name: vmr_internal
       select_value: vmr_internal
       label: VMR Internal
     - name: ldap_server
       select_value: ldap_server
       label: LDAP Server
 - name: management_access_config
   label: Management Access
   description: "Configure how VMR Administrators will be authenticated when they login to the management interface."
   properties:
   - name: vmr_admin_password
     type: secret
     placeholder: admin password
     label: Admin user password
     description: The Message Routers will set their admin user password to what is provided here
   - name: management_access_auth_scheme
     type: selector
     label: "Choose the Authentication/Authorization mechanism for VMR Administrative users."
     description: "When 'LDAP Server' is selected, you must enable LDAP and enter valid settings under 'LDAP Settings'. A Deployment will fail if LDAP is not enabled or its settings are not valid."
     configurable: true
     optional: false
     default: vmr_internal
     option_templates:
     - name: vmr_internal
       select_value: vmr_internal
       label: VMR Internal
     - name: ldap_server
       select_value: ldap_server
       label: LDAP Server
       property_blueprints:
       - name: ldap_mgmt_read_only_groups
         label: Groups with VMR administration read-only privileges
         type: string
         optional: true
         configurable: true
         placeholder: "'cn=rdonly,cn=groups,dc=example,dc=com'"
         description: "'Groups which have read-only administrative access to all VMRs deployed by this tile.  It is possible to leave empty or to specify multiple groups separated by a space.'"
       - name: ldap_mgmt_read_write_groups
         label: Groups with VMR administration read-write privileges
         type: string
         optional: true
         configurable: true
         placeholder: "'cn=readwrite,cn=groups,dc=example,dc=com'"
         description: "'Groups which have read-write administrative access to all VMRs deployed by this tile.  It is possible to leave empty or to specify multiple groups separated by a space.'"
       - name: ldap_mgmt_admin_groups
         label: Groups with VMR administration administrator privileges
         type: string
         optional: true
         configurable: true
         placeholder: "'cn=admin,cn=groups,dc=example,dc=com'"
         description: "'Groups which have administrator administrative access to all VMRs deployed by this tile.  It is possible to leave empty or to specify multiple groups separated by a space.'"
 - name: ldap_settings
   label: LDAP Settings
   description: Configure external LDAP user store (Optional)
   properties:
   - name: ldap_config
     type: selector
     label: Choose whether an external LDAP user store is to be used or not
     configurable: true
     default: disabled
     option_templates:
     - name: disabled
       select_value: disabled
       label: Disabled
     - name: enabled
       select_value: enabled
       label: LDAP Enabled
       property_blueprints:
       - name: ldap_server_url
         label: LDAP Server URL
         type: ldap_url
         placeholder: "'ldap://ldap.domain.com'"
         description: "'Required for LDAP. Must start with `ldap://`.  Note that while start TLS is supported with `ldap://`, `ldaps://` is not supported.  Multiple entries can be separated by spaces.  A maximum of 10 entries is supported.'"
         configurable: true
       - name: ldap_start_tls
         type: dropdown_select
         label: LDAP startTLS
         configurable: true
         description: "'Enabling startTLS will allow the VMR to switch securely over TLS with the LDAP server after it initiates the connection in plain text mode. NOTE: In order to use startTLS you need to add the signing certificate for the LDAP server in the trust store of the TLS Config form.'"
         options:
         - label: Disable startTLS
           name: disabled
           select_value: disabled
           default: true
         - label: Enable startTLS
           name: enabled
           select_value: enabled
       - name: ldap_credentials
         label: LDAP Credentials
         type: simple_credentials
         description: "'Required for LDAP.  These are the credentials to use when the service is querying LDAP for authentication and authorization.  The credentials should be for a user with read-only privileges to the LDAP server.'"
         configurable: true
       - name: ldap_user_search_base
         label: User Search Base
         type: string
         placeholder: "'cn=users,dc=example,dc=com'"
         description: "'Required for LDAP. Example: `ou=Users,dc=example,dc=com.`'"
         configurable: true
       - name: ldap_user_search_filter
         label: User Search Filter
         default: cn=$CLIENT_USERNAME
         type: string
         description: "'Required for LDAP. $CLIENT_USERNAME gets substituted by the client username.'"
         configurable: true
       - name: ldap_group_membership_attribute_name
         label: User Group Membership Attribute Name
         type: string
         default: memberOf
         description: "'Attribute of the user LDAP entry which contains the user group.'"
         configurable: true
 - name: system_logging
   label: System Logging
   description: Configure system logging. 
   properties:
   - name: syslog_config
     type: selector
     label: Choose whether system logging is to be used or not
     configurable: true
     default: disabled
     option_templates:
     - name: disabled
       select_value: disabled
       label: System Logging Disabled
     - name: enabled
       select_value: enabled
       label: System Logging Enabled
       property_blueprints:
       - name: syslog_hostname
         type: string
         label: External Syslog Aggregator Hostname or IPv4 Address
         description: The aggregator must be reachable from the Elastic Runtime network, accept TCP or UDP connections, and use the RELP protocol (e.g. rsyslogd)
         optional: false
         configurable: true
       - name: syslog_port
         type: port
         label: External Syslog Aggregator Port
         description: The typical syslogd port is 514. Ensure syslogd is listening on external interfaces.
         placeholder: 514
         configurable: true
         optional: false
       - name: syslog_protocol
         type: dropdown_select
         label: External Syslog Network Protocol 
         description: Select the transport protocol for forwarding logs.
         configurable: true
         optional: true
         options:
         - name: udp
           label: UDP Protocol
           default: true
         - name: tcp
           label: TCP Protocol
       - name: syslog_vmr_command_logs
         type: boolean
         label: Send VMR configuration command logs
         description: When enabled, the VMR's command facility (local1) will be forwarded to syslog
         configurable: true
         optional: true
       - name: syslog_vmr_event_logs
         type: boolean
         label: Send VMR configuration event logs
         description: When enabled, the VMR's event facility (local3) will be forwarded to syslog
         configurable: true
         optional: true
       - name: syslog_vmr_system_logs
         type: boolean
         label: Send VMR configuration system logs
         description: When enabled, the VMR's system facility (local4) will be forwarded to syslog
         configurable: true
         optional: true
       - name: syslog_broker_and_agent_logs
         type: boolean
         label: Send Service Broker and VMR-Agent's logs
         description: When enabled, the Service Broker and VMR-Agent's facility (local5) will be forwarded to syslog
         configurable: true
         optional: true
 - name: tcp_routes_settings
   label: TCP Routes
   description: Supports exposing VMR service ports to the internet (Optional)
   markdown: |
     NOTE: If you enable TCP Routes, please provide the credentials for the solace_router uaa client that 
     can create TCP routes.
     The credentials are only required for earlier versions of the Elastic Runtimes that
     do not contain a `solace_router` uaa client.
     Failing to specify these credential when there is no `solace_router` will result in a deployment failure:

     ```
     unknown property "solace_router"...
     ```
     Please see the docs for detailed instructions on creating the solace_router uaa client and its credentials.
   properties:
   - name: tcp_routes_config
     type: selector
     label: Choose whether TCP Routes are enabled or not
     configurable: true
     default: disabled
     option_templates:
     - name: disabled
       select_value: disabled
       label: TCP Routes Disabled
       property_blueprints:
       - name: tcp_route_enabled
         type: dropdown_select
         label: TCP Routing Is Not Allowed
         configurable: true
         description: "'TCP Routing Is Not Allowed'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
     - name: enabled
       select_value: enabled
       label: TCP Routes Enabled
       property_blueprints:
       - name: cf_credentials
         label: CF Credentials
         type: simple_credentials
         description: "'Required for TCP routing if solace_router was manually created.  These are the credentials of the cf client who can create the TCP routes.'"
         configurable: true
         optional: true
       - name: smf_tcp_route_enabled
         type: dropdown_select
         label: SMF / Plain-Text
         configurable: true
         description: "'TCP Routing control for SMF / Plain-Text'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: smf_tls_tcp_route_enabled
         type: dropdown_select
         label: SMF / Secure
         configurable: true
         description: "'TCP Routing control for SMF / Secure'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: smf_zip_tcp_route_enabled
         type: dropdown_select
         label: SMF / Compressed (Zip)
         configurable: true
         description: "'TCP Routing control for SMF / Compressed (Zip)'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: web_messaging_tcp_route_enabled
         type: dropdown_select
         label: SMF / Web-Plain-Text
         configurable: true
         description: "'TCP Routing control for SMF / Web-Plain-Text'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: web_messaging_tls_tcp_route_enabled
         type: dropdown_select
         label: SMF / Web-Secure
         configurable: true
         description: "'TCP Routing control for SMF / Web-Secure'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: mqtt_tcp_route_enabled
         type: dropdown_select
         label: MQTT / Plain-Text
         configurable: true
         description: "'TCP Routing control for MQTT / Plain-Text'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: mqtt_tls_tcp_route_enabled
         type: dropdown_select
         label: MQTT / Secure
         configurable: true
         description: "'TCP Routing control for MQTT / Secure'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: mqtt_ws_tcp_route_enabled
         type: dropdown_select
         label: MQTT / Websocket-Plain-Text
         configurable: true
         description: "'TCP Routing control for MQTT / Websocket-Plain-Text'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: mqtt_wss_tcp_route_enabled
         type: dropdown_select
         label: MQTT / Websocket-Secure
         configurable: true
         description: "'TCP Routing control for MQTT / Websocket-Secure'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: rest_tcp_route_enabled
         type: dropdown_select
         label: REST / Plain-Text
         configurable: true
         description: "'TCP Routing control for REST / Plain-Text'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default
       - name: rest_tls_tcp_route_enabled
         type: dropdown_select
         label: REST / Secure
         configurable: true
         description: "'TCP Routing control for REST / Secure'"
         options:
         - label: Not Allowed
           name: not_allowed
           select_value: not_allowed
           default: true
         - label: Disabled by default
           name: disabled_by_default
           select_value: disabled_by_default
         - label: Enabled by default
           name: enabled_by_default
           select_value: enabled_by_default

# Add any dependencies your tile has on other installed products.
# This is often appropriate when using automatic service provisioning
# for any of your packages above, with services provided by other
# products.
#
requires_product_versions:
 - name: p-mysql
   version: '>= 1.7.9'
